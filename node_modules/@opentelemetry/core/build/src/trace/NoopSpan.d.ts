/*!
 * Copyright 2019, OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as types from '@opentelemetry/types';
/**
 * The NoopSpan is the default {@link Span} that is used when no Span
 * implementation is available. All operations are no-op including context
 * propagation.
 */
export declare class NoopSpan implements types.Span {
    private readonly _spanContext;
    constructor(_spanContext?: types.SpanContext);
    context(): types.SpanContext;
    setAttribute(key: string, value: unknown): this;
    setAttributes(attributes: types.Attributes): this;
    addEvent(name: string, attributes?: types.Attributes): this;
    addLink(spanContext: types.SpanContext, attributes?: types.Attributes): this;
    setStatus(status: types.Status): this;
    updateName(name: string): this;
    end(endTime?: types.TimeInput): void;
    isRecording(): boolean;
}
export declare const NOOP_SPAN: NoopSpan;
