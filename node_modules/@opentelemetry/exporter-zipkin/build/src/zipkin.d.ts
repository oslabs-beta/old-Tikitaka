/*!
 * Copyright 2019, OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { SpanExporter, ReadableSpan } from '@opentelemetry/tracing';
import { ExportResult } from '@opentelemetry/base';
import * as zipkinTypes from './types';
/**
 * Zipkin Exporter
 */
export declare class ZipkinExporter implements SpanExporter {
    static readonly DEFAULT_URL = "http://localhost:9411/api/v2/spans";
    private readonly _forceFlush;
    private readonly _logger;
    private readonly _serviceName;
    private readonly _statusCodeTagName;
    private readonly _statusDescriptionTagName;
    private readonly _reqOpts;
    private _isShutdown;
    constructor(config: zipkinTypes.ExporterConfig);
    /**
     * Export spans.
     */
    export(spans: ReadableSpan[], resultCallback: (result: ExportResult) => void): void;
    /**
     * Shutdown exporter. Noop operation in this exporter.
     */
    shutdown(): void;
    /**
     * Transforms an OpenTelemetry span to a Zipkin span.
     */
    private _toZipkinSpan;
    /**
     * Transform spans and sends to Zipkin service.
     */
    private _sendSpans;
    /**
     * Send spans to the remote Zipkin service.
     */
    private _send;
}
