"use strict";
/*!
 * Copyright 2019, OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@opentelemetry/core");
const _1 = require(".");
const types_1 = require("./types");
/**
 * This class represents a meter registry which platform libraries can extend
 */
class MeterRegistry {
    constructor(_config = types_1.DEFAULT_CONFIG) {
        this._config = _config;
        this._meters = new Map();
        this.logger = _config.logger || new core_1.ConsoleLogger(_config.logLevel);
    }
    /**
     * Returns a Meter, creating one if one with the given name and version is not already created
     *
     * @returns Meter A Meter with the given name and version
     */
    getMeter(name, version = '*', config) {
        const key = `${name}@${version}`;
        if (!this._meters.has(key)) {
            this._meters.set(key, new _1.Meter(config || this._config));
        }
        return this._meters.get(key);
    }
}
exports.MeterRegistry = MeterRegistry;
//# sourceMappingURL=MeterRegistry.js.map